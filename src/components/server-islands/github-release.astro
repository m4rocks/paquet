---
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';
import { ExternalLinkIcon } from 'lucide-react';
import { Button } from '../ui/button';
import { getCollection } from 'astro:content';
import { getEntry } from 'astro:content';

interface GitHubResponse {
	html_url: string;
	name: string;
	published_at: string;
	reactions: {
		url: string;
		total_count: number;
		"+1": number;
		"-1": number;
		laugh: number;
		hooray: number;
		confused: number;
		heart: number;
		rocket: number;
		eyes: number;
	}
}

const referer = Astro.request.headers.get('Referer')!;
const url = new URL(referer)!;
const id = url.pathname.split("/")[2];

const app = await getEntry("apps", id);

if (!app || !app.data.githubUrl) {
	Astro.response.status = 400;
	Astro.response.statusText = "No GitHub URL provided";
	return;
};

const res = await fetch("https://api.github.com/repos" + new URL(app.data.githubUrl).pathname + "/releases/latest", {
	headers: {
		"Authorization": `Bearer ${Astro.locals.runtime.env.GITHUB_API_KEY}`,
		"User-Agent": "paquet"
	}
})
	.then((res) => res.json() as unknown as GitHubResponse)
	.catch((err) => {
		console.log(err);
		return null
	});

if (!res) {
	Astro.response.status = 400;
	Astro.response.statusText = "No response from GitHub";
	return;
};

// Cached for 3 days
Astro.response.headers.set("Cache-Control", `public, max-age=${60*60*24*3}`);
---

<Card>
	<CardHeader>
		<CardTitle>
			Latest release
		</CardTitle>
		<CardDescription>
			{res.name} &middot; Published on {new Date(res.published_at).toLocaleDateString("en-GB")}
			<br/>
			Last checked at {new Date().toLocaleTimeString("en-GB")}
		</CardDescription>
	</CardHeader>
	<CardContent>
		<a
			href={res.html_url}
			target="_blank"
		>
			<Button
				variant="outline"
			>
				<ExternalLinkIcon/>
				Check out the release on GitHub
			</Button>
		</a>
	</CardContent>
</Card>
